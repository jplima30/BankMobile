//
//  LoginViewController.swift
//  DesafioAppBank
//
//  Created by jplima on 09/01/21.
//  Copyright (c) 2021 jplima. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class {
    func displayDetails(viewModel: Login.UserLogin.ViewModel)
    func displayError(message: String)
    func displayarInformacaoNaTela(viewModel:String)
}

class LoginViewController: UIViewController, LoginDisplayLogic {
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?
    
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = LoginInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        signIn()
        chamarInteractor()
    }
    
    func signIn() {
        let request = Login.UserLogin.Request(user: "test_user", password: "Test@1")
        interactor?.signIn(request: request)
    }
    
    func displayDetails(viewModel: Login.UserLogin.ViewModel) {
        if viewModel.userSigned {
            interactor?.populateDataStoreUserAccount(userAccount: viewModel.userAccount)
            router?.routeToDetails()
        }
    }
    
    func chamarInteractor() {
        let request = "Informação"
        interactor?.processarAlgo(request: request)
    }
    
    func displayarInformacaoNaTela(viewModel:String) {
        print(viewModel)
    }
    
    func displayError(message: String) {
        
    }
}
